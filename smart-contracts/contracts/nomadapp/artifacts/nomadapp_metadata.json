{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "invalid_state",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "just_cash_provider",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "just_nomada",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "abort",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cash_provider",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cash_provider_confirm_transaction",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirm_received",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "contract_status",
				"outputs": [
					{
						"internalType": "enum nomadapp.state",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "get_time_left",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "money_to_change",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nomada",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "show_balance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"invalid_state()": [
					{
						"notice": "The function cannot be called at the current state."
					}
				],
				"just_cash_provider()": [
					{
						"notice": "Only the cash provider can call this function"
					}
				],
				"just_nomada()": [
					{
						"notice": "Only the nomada can call this function"
					}
				]
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/nomadapp/nomadapp.sol": "nomadapp"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/nomadapp/nomadapp.sol": {
			"keccak256": "0xc4152ba17428c04b97341957cacbe114cbe3dd0428273b65313e53c6a3ba50bf",
			"license": "MIT",
			"urls": [
				"bzz-raw://92bcf04b829598f41b1fa3d64f662b8fc475745dfaf023897cc77da52ca95793",
				"dweb:/ipfs/QmXwwArQ91BeTmrbyS9gYv12EFGnFSqZ9d47TyMcaYZxPm"
			]
		}
	},
	"version": 1
}